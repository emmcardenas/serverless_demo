service: serverless-demo-api

provider:
  name: aws
  runtime: python3.8
  stage: ${self:custom.stage}

custom:
  pythonRequirements:
    dockerizePip: non-linux
    fileName: requirements.txt
  dynamodb:
    start:
      migrate: true
    stages:
      - dev
  stage: ${opt:stage}
  config:
    dev:
      account_id: '664096853771'
      memory_size: 128
    stg:
      memory_size: 128
      account_id: '723706874016'
  
functions:
  ping:
    handler: ping.lambda_handler
    events:
      - http:
          method: GET
          path: /ping
          private: false
    timeout: 600
    role: arn:aws:iam::${self:custom.config.${self:custom.stage}.account_id}:role/EmmLambdaPingExecutionRole
    tags:
      Name: serverless-demo-ping
  getItems:
    handler: items.get_all_items
    events:
      - http:
          method: GET
          path: /items
          private: true
    timeout: 600
    role: arn:aws:iam::${self:custom.config.${self:custom.stage}.account_id}:role/EmmLambdaItemsExecutionRole
    tags:
      Name: serverless-demo-get-items
  getItem:
    handler: items.get_item
    events:
      - http:
          method: GET
          path: /items/{proxy+}
          private: true
    timeout: 600
    role: arn:aws:iam::${self:custom.config.${self:custom.stage}.account_id}:role/EmmLambdaItemsExecutionRole
    tags:
      Name: serverless-demo-get-item
  createItem:
    handler: items.create_item
    events:
      - http:
          method: POST
          path: /items
          private: true
    timeout: 600
    role: arn:aws:iam::${self:custom.config.${self:custom.stage}.account_id}:role/EmmLambdaItemsExecutionRole
    tags:
      Name: serverless-demo-create-item
  updateItem:
    handler: items.update_item
    events:
      - http:
          method: PUT
          path: /items
          private: true
    timeout: 600
    role: arn:aws:iam::${self:custom.config.${self:custom.stage}.account_id}:role/EmmLambdaItemsExecutionRole
    tags:
      Name: serverless-demo-update-item
  deleteItem:
    handler: items.delete_item
    events:
      - http:
          method: DELETE
          path: /items/{proxy+}
          private: true
    timeout: 600
    role: arn:aws:iam::${self:custom.config.${self:custom.stage}.account_id}:role/EmmLambdaItemsExecutionRole
    tags:
      Name: serverless-demo-delete-item